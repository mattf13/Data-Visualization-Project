x = "Points", y = "Density", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight")+
theme_classic() +
theme(
plot.background = element_rect(fill = "white"),
axis.text = element_text(color = "#C8102E", size = 12, family = "sans"),
plot.title =  element_text(color = "#C8102E", size = 14, family = "sans", face = "bold"),
axis.title =  element_text(color = "#C8102E", size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
)
liverpool_points_2018_density
liverpool_distribution_home <- spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(points_home = factor(points_home, levels = c("3", "1", "0"))) %>%
ggplot(position = "dodge")+
geom_col(mapping = aes(x = date, y = spi1, fill = points_home))+
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Liverpool Home Performances in 2018", subtitle = "Points gained by Liverpool and Liverpool SPI as the home team in the 2018 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Liverpool SPI") +
coord_cartesian(ylim = c(80,100)) +
scale_y_continuous(breaks = seq(80, 100, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")) +
guides(fill = guide_legend(title = "Points"))
liverpool_distribution_away <- spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(points_away = factor(points_away, levels = c("3", "1", "0"))) %>%
ggplot(position = "dodge")+
geom_col(mapping = aes(x = date, y = spi2, fill = points_away))+
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Liverpool Home Performances in 2018", subtitle = "Points gained by Liverpool and Liverpool SPI as the away team in the 2018 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Liverpool SPI") +
coord_cartesian(ylim = c(80,100)) +
scale_y_continuous(breaks = seq(80, 100, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")) +
guides(fill = guide_legend(title = "Points"))
grid.arrange(liverpool_distribution_home, liverpool_distribution_away, nrow = 2)
points_lv_ho = spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(liverpool_points), y = spi2, fill=liverpool_points)) +
scale_fill_manual(values=c("#30937F", "#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title ="Liverpool Performances (Home team)  2018 season", subtitle = "Liverpool's match outcome compared to Opposition SPI" ,caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x="Match outcome",y="Opposition SPI")
points_lv_ho
points_lv_aw = spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(liverpool_points), y = spi1, fill=liverpool_points)) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title ="Liverpool Performances (Away team)  2018 season", subtitle = "Liverpool's match outcome compared to Opposition SPI" ,caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x="Match outcome",y="Opposition SPI")
points_lv_aw
points_lv_h = spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi1, y = spi2, color = liverpool_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Liverpool Performances (Home team) 2018 season ", subtitle = "Liverpool's match outcome and SPI comparison ", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Liverpool SPI",y="Opposition SPI")
points_lv_h
points_lv_a = spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi2, y = spi1, color = liverpool_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F","#4ADDE0"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Liverpool Performances (Away team) 2018 season", subtitle = "Liverpool's match outcome and SPI comparison ", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Liverpool SPI",y = "Opposition SPI")
points_lv_a
libraries <- c(
"tidyverse",
"gapminder",
"gridExtra",
"tidyr",
"tibble"
)
load_libs <- function(libraries) {
# Use a snapshot of the package repository, for reproducibility purposes
MRAN <- "https://cran.microsoft.com/snapshot/2022-09-15/"
req <- unlist(lapply(libraries, require, character.only = TRUE))
need <- libraries[req == FALSE]
if (length(need) > 0) {
install.packages(need, repos=MRAN)
lapply(need, require, character.only = TRUE)
}
}
load_libs(libraries)
#load data set
spi_matches_url <- "https://projects.fivethirtyeight.com/soccer-api/club/spi_matches.csv"
spi_matches <- read_csv(spi_matches_url, na=c("", " "))
spi_matches
names(spi_matches)
dim(spi_matches)
sum(is.na(spi_matches))
spi_matches_without_na <- spi_matches %>%
drop_na()
spi_matches_without_na
columns_to_remove = c("prob1","prob2","probtie","proj_score1", "proj_score2", "importance1", "importance2", "adj_score1","adj_score2","xg1","xg2","nsxg1","nsxg2")
spi_matches_cleaned <- subset(spi_matches_without_na, select = !(names(spi_matches_without_na) %in% columns_to_remove))
spi_matches_cleaned
spi_matches_with_results<-spi_matches_cleaned%>%
mutate(points_home =  case_when(score1>score2 ~ 3,
score1<score2 ~ 0,
TRUE ~ 1)) %>%
mutate(points_away =  case_when(score1>score2 ~ 0,
score1<score2 ~ 3,
TRUE ~ 1))
spi_matches_with_results
#all matches with a column that specify if Roma played at home or away
serie_a_matches_Roma <- spi_matches_with_results%>%
filter(league_id == 1854, season<=2021, team1 == "AS Roma" | team2 == "AS Roma")%>%
mutate(location = ifelse(team1 == "AS Roma", "home", "away")) %>%
mutate(roma_points = ifelse(location == "home", points_home, points_away)) %>%
group_by(season) %>%
mutate(match_week = row_number())
serie_a_matches_Roma
avg_spi_roma <- serie_a_matches_Roma %>%
filter(team1 == 'AS Roma' | team2 == 'AS Roma')%>%
group_by(season)%>%
summarize(average_spi = mean(c(spi1,spi2)))%>%
ggplot(mapping = aes(x = season)) +
geom_line(mapping =aes(y = average_spi, color = "Average SPI")) +
geom_point(mapping =aes(y = average_spi, color = "Average SPI"), size=3) +
guides(fill = guide_legend(title = "Metric", reverse = TRUE))+
labs(x = "Season", y = "SPI Value", title = "Average SPI of AS Roma over the Seasons", subtitle = "Trends in Roma's SPI over the seasons",caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight") +
guides(color = guide_legend(title = "Metric", reverse = TRUE))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
)
avg_spi_roma
roma_points_2021_density <- serie_a_matches_Roma %>%
filter(season == 2021, (team1 == "AS Roma" | team2 == "AS Roma")) %>%
group_by(match_week) %>%
summarize(points = sum(roma_points)) %>%
ggplot( aes(x = points)) +
geom_density(color = "black", fill ="#F0BC00" ) +
scale_x_continuous(breaks = c(0, 1, 3), limits = c(0, 3), name = "Points") +
labs(title = "Density Plot of Points Made by AS Roma in the 2021 Season",
x = "Points", y = "Density", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight")+
theme_classic() +
theme(
plot.background = element_rect(fill = "white"),
axis.text = element_text(color = "#8E1F2F", size = 12, family = "sans"),
plot.title =  element_text(color = "#8E1F2F", size = 14, family = "sans", face = "bold"),
axis.title =  element_text(color = "#8E1F2F", size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
)
roma_points_2021_density
roma_distribution_home <- serie_a_matches_Roma %>%
filter(season == 2021, team1 == "AS Roma") %>%
mutate(roma_points = factor(roma_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = roma_points, y = spi1, fill = roma_points)) +
geom_violin(scale = "area", draw_quantiles = c(0.25, 0.5, 0.75), width = 0.8) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A")) +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title = "Distribution of Roma SPI in 2021", subtitle = "Points gained by Roma and Roma SPI distribution as the home team in the 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Match result", y = "Roma SPI") +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
)
roma_distribution_home
roma_distribution_away <- serie_a_matches_Roma %>%
filter(season == 2021, team2 == "AS Roma") %>%
mutate(roma_points = factor(roma_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = roma_points, y = spi2, fill = roma_points)) +
geom_violin(scale = "area", draw_quantiles = c(0.25, 0.5, 0.75), width = 0.8) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A")) +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
guides(fill = guide_legend(reverse = TRUE, title ="Points"))+
labs(title = "Distribution of Roma SPI in 2021", subtitle = "Points gained by Roma and Roma SPI distribution as the away team in the 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Match result", y = "Roma SPI") +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
)
roma_distribution_away
#home
Roma_2021_home <- serie_a_matches_Roma %>%
filter(season==2021, team1 =='AS Roma') %>%
mutate(points_home = factor(points_home, levels = c("3", "1", "0"))) %>%
ggplot(position = "dodge")+
geom_col(mapping = aes(x = date, y = spi1, fill = points_home))+
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Roma Home Performances in 2021", subtitle = "Points gained by Roma and Roma SPI trend as the home team in the 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Roma SPI") +
coord_cartesian(ylim = c(60,80)) +
scale_y_continuous(breaks = seq(60, 80, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")) +
guides(fill = guide_legend(title = "Points"))
#away
Roma_2021_away <- serie_a_matches_Roma %>%
filter(season == 2021, team2 =='AS Roma') %>%
mutate(points_away = factor(points_away, levels = c("3", "1", "0"))) %>%
ggplot(mapping = aes(x = date, y = spi2, fill = points_away)) +
geom_col(position = "dodge") +
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Roma Away Performances in 2021", subtitle = "Points gained by Roma and Roma SPI trend as the away team in the 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Roma SPI") +
coord_cartesian(ylim = c(60,80)) +
scale_y_continuous(breaks = seq(60, 80, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")
) +
guides(fill = guide_legend(title = "Points"))
#comparison
grid.arrange(Roma_2021_home, Roma_2021_away, nrow = 2)
points_roma_ho = serie_a_matches_Roma %>%
filter(season==2021, team1 =='AS Roma') %>%
mutate(roma_points = factor(roma_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(roma_points), y = spi2, fill=roma_points)) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title = "Roma Performances (Home team) in 2021", subtitle = "Roma's match outcome compared to Opposition SPI and Roma's points in 2021 season", x="Match outcome",y="Opposition SPI", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight")
points_roma_ho
points_roma_aw = serie_a_matches_Roma %>%
filter(season==2021, team2 =='AS Roma') %>%
mutate(roma_points = factor(roma_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(roma_points), y = spi1, fill=roma_points)) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(fill = guide_legend(reverse = TRUE, title ="Points"))+
labs(title = "Roma Performances (Away team) in 2021", subtitle = "Roma's match outcome compared to Opposition SPI and Roma's points in 2021 season", x="Match outcome",y="Opposition SPI", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight")
points_roma_aw
points_roma_h = serie_a_matches_Roma %>%
filter(season==2021, team1 =='AS Roma') %>%
mutate(roma_points = factor(roma_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi1, y = spi2, color = roma_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F","#4ADDE0"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Roma Performances (Home team) in 2021", subtitle = "Roma's match outcome and comparison of Roma and Away team SPI in 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x= "Roma SPI", y ="Opposition SPI")
points_roma_h
points_roma_a = serie_a_matches_Roma %>%
filter(season==2021, team2 =='AS Roma') %>%
mutate(roma_points = factor(roma_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi2, y = spi1, color = roma_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F","#4ADDE0"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Roma Performances (Away team) in 2021", subtitle = "Roma's match outcome and comparison of Roma and Home team SPI in 2021 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Roma SPI", y="Opposition SPI")
points_roma_a
spi_premierleague<- spi_matches_with_results%>%
filter(league_id == 2411, season<=2021, team1 == "Liverpool" | team2 == "Liverpool")%>%
mutate(location = ifelse(team1 == "Liverpool", "home", "away")) %>%
mutate(liverpool_points = ifelse(location == "home", points_home, points_away)) %>%
group_by(season) %>%
mutate(match_week = row_number())
spi_premierleague
avg_spi_liverpool <- spi_premierleague %>%
filter(team1 == 'Liverpool' | team2 == 'Liverpool')%>%
group_by(season)%>%
summarize(average_spi = mean(c(spi1,spi2)))%>%
ggplot(mapping = aes(x = season)) +
geom_line(mapping =aes(y = average_spi, color = "Average SPI")) +
geom_point(mapping =aes(y = average_spi, color = "Average SPI"), size=3) +
guides(fill = guide_legend(title = "Metric", reverse = TRUE))+
labs(x = "Season", y = "SPI Value", title = "Average SPI of Liverpool over the Seasons", subtitle = "Trends in Liverpool's SPI over the seasons",caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight") +
guides(color = guide_legend(title = "Metric", reverse = TRUE))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
)
avg_spi_liverpool
liverpool_points_2018_density <- spi_premierleague %>%
filter(season == 2018, (team1 == "Liverpool" | team2 == "Liverpool")) %>%
group_by(match_week) %>%
summarize(points = sum(liverpool_points)) %>%
ggplot(aes(x = points)) +
geom_density(color = "black", fill ="#00B2A9" ) +
scale_x_continuous(breaks = c(0, 1, 3), limits = c(0, 3), name = "Points") +
labs(title = "Density Plot of Points made by Liverpool in the 2018 Season",
x = "Points", y = "Density", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight")+
theme_classic() +
theme(
plot.background = element_rect(fill = "white"),
axis.text = element_text(color = "#C8102E", size = 12, family = "sans"),
plot.title =  element_text(color = "#C8102E", size = 14, family = "sans", face = "bold"),
axis.title =  element_text(color = "#C8102E", size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
)
liverpool_points_2018_density
liverpool_distribution_home <- spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(points_home = factor(points_home, levels = c("3", "1", "0"))) %>%
ggplot(position = "dodge")+
geom_col(mapping = aes(x = date, y = spi1, fill = points_home))+
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Liverpool Home Performances in 2018", subtitle = "Points gained by Liverpool and Liverpool SPI as the home team in the 2018 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Liverpool SPI") +
coord_cartesian(ylim = c(80,100)) +
scale_y_continuous(breaks = seq(80, 100, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")) +
guides(fill = guide_legend(title = "Points"))
liverpool_distribution_away <- spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(points_away = factor(points_away, levels = c("3", "1", "0"))) %>%
ggplot(position = "dodge")+
geom_col(mapping = aes(x = date, y = spi2, fill = points_away))+
scale_x_date(date_breaks = "4 week", date_labels = "%b %d", name = "Date") +
scale_fill_manual(values=c("#152D1A","#30937F","#4ADDE0") )+
labs(title = "Liverpool Home Performances in 2018", subtitle = "Points gained by Liverpool and Liverpool SPI as the away team in the 2018 season", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Date", y = "Liverpool SPI") +
coord_cartesian(ylim = c(80,100)) +
scale_y_continuous(breaks = seq(80, 100, 10)) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
plot.subtitle = element_text(size = 12, family = "sans"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold")) +
guides(fill = guide_legend(title = "Points"))
grid.arrange(liverpool_distribution_home, liverpool_distribution_away, nrow = 2)
points_lv_ho = spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(liverpool_points), y = spi2, fill=liverpool_points)) +
scale_fill_manual(values=c("#30937F", "#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title ="Liverpool Performances (Home team)  2018 season", subtitle = "Liverpool's match outcome compared to Opposition SPI" ,caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x="Match outcome",y="Opposition SPI")
points_lv_ho
points_lv_aw = spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("0", "1", "3"))) %>%
ggplot(aes(x = factor(liverpool_points), y = spi1, fill=liverpool_points)) +
scale_fill_manual(values=c("#4ADDE0","#30937F","#152D1A"))+
geom_boxplot() +
scale_x_discrete(labels = c("0" = "Loss", "1" = "Draw", "3" = "Win")) +
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans"),
) +
guides(fill = guide_legend(reverse = TRUE, title = "Points"))+
labs(title ="Liverpool Performances (Away team)  2018 season", subtitle = "Liverpool's match outcome compared to Opposition SPI" ,caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x="Match outcome",y="Opposition SPI")
points_lv_aw
points_lv_h = spi_premierleague %>%
filter(season==2018, team1 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi1, y = spi2, color = liverpool_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Liverpool Performances (Home team) 2018 season ", subtitle = "Liverpool's match outcome and comparison of Liverpool and away team SPI", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Liverpool SPI",y="Opposition SPI")
points_lv_h
points_lv_a = spi_premierleague %>%
filter(season==2018, team2 =='Liverpool') %>%
mutate(liverpool_points = factor(liverpool_points , levels = c("3", "1", "0"))) %>%
ggplot(aes(x = spi2, y = spi1, color = liverpool_points)) +
geom_point(size = 3, alpha = 0.8) +
scale_color_manual(values=c("#152D1A","#30937F","#4ADDE0"))+
theme_minimal() +
theme(plot.title = element_text(size = 14, family = "sans", face = "bold"),
axis.text = element_text(size = 12, family = "sans"),
axis.title = element_text(size = 14, family = "sans", face = "bold"),
legend.key.height = unit(1, "cm"),
legend.key.width = unit(1, "cm"),
legend.title = element_text(size = 14, family = "sans", face = "bold"),
legend.text = element_text(size = 12, family = "sans")
) +
guides(color = guide_legend(title = "Points")) +
labs(title = "Liverpool Performances (Away team) 2018 season", subtitle = "Liverpool's match outcome and comparison of Liverpool and home team SPI", caption = "Source: Soccer Power Index (SPI) ratings from FiveThirtyEight", x = "Liverpool SPI",y = "Opposition SPI")
points_lv_a
